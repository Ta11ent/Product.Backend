services:
  productcatalog.api:
    image: ${DOCKER_REGISTRY-}productcatalogapi
    container_name: products.api
    build:
      context: .
      dockerfile: Services/Product/src/Presentation/ProductCatalog.cs/Dockerfile
    ports:
        - "7000:7000"
        - "7001:7001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_SERVER=productcatalog.db                 
      - DB_NAME=Product_DB
      - DB_USER=Admin_DB
      - DB_PASSWORD=P@ssw0rd
    depends_on:
      - productcatalog.db

  productcatalog.db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: products.db_mssql
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd
      - MSSQL_PID=Express
    volumes:
      - ./.containers/products-db:/var/lib/mssql/data


  shoppingcart.api:
    image: ${DOCKER_REGISTRY-}shoppingcartapi
    container_name: shoppingcart.api
    build:
        context: .
        dockerfile: Services\ShoppingCart\src\Presentation\ShoppingCart.API\Dockerfile
    ports:
        - "8080:8080"
        - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_SERVER=productcatalog.db                 
      - DB_NAME=Product_DB
      - DB_USER=Admin_DB
      - DB_PASSWORD=P@ssw0rd
    depends_on:
      - shoppingcart.db

  shoppingcart.db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: shoppingcart.db_mssql
    ports:
        - "1533:1533"
    environment:
        - ACCEPT_EULA=Y
        - SA_PASSWORD=P@ssw0rd
        - MSSQL_PID=Express
    volumes:
        - ./.containers/shoppingcarts-db:/var/lib/mssql/data



  redis.cash:
    image: redis:latest
    container_name: products.redis_cash
    ports:
      - "6379:3679"
    restart: always

  rabbitmq.broker-service:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment: 
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

    
  


